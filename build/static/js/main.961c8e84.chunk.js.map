{"version":3,"sources":["components/RateToday.js","components/RateButton.js","components/ActivityCard.js","components/TaskListMorning.js","components/TaskListAfternoon.js","components/TaskListEvening.js","components/TaskListNone.js","App.js","index.js"],"names":["Log","Airtable","apiKey","base","table","today_string","Date","toISOString","substring","RateToday","props","rateToday","val","console","log","setState","value","i","state","activities","fields","update","id","toString","then","resp","length","list","maxRecords","pageSize","view","cellFormat","data","records","catch","error","className","onClick","this","Component","RateButton","promote","openInAt","window","open","rating","style","String","prototype","toHHMM","sec_num","parseInt","hours","Math","floor","minutes","seconds","ActivityCard","replan","element","document","getElementById","name","promotion","opacity","create","what_id","borderColor","borderWidth","delete","href","goals","split","map","goal","fontSize","notes","duration","yesterday","setDate","getDate","dd","padStart","mm","getMonth","airtable","TaskListMorning","useState","setActivities","useEffect","cycle","sort","a","b","filter","record","includes","what_string","concluded","TaskListAfternoon","TaskListEvening","TaskListNone","App","run","reRun","ReactDOM","render","tasks"],"mappings":"gPAGMA,EAAM,IAAIC,IAAS,CAACC,OAAQ,sBAC7BC,KAAK,qBACLC,MAAM,OAGLC,GADQ,IAAIC,MACSC,cAAcC,UAAU,EAAG,IA6FvCC,E,kDA1FX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAuBVC,UAAY,SAACC,GACTC,QAAQC,IAAI,gBAEZ,EAAKC,SAAS,CAACC,MAAOJ,IAEtB,IALiB,eAKRK,GACD,EAAKC,MAAMC,WAAWF,GAAGG,OAAQ,eAAiBf,GAClDL,EAAIqB,OAAO,EAAKH,MAAMC,WAAWF,GAAGK,GAAI,CAAC,gBAAiBV,EAAIW,aAAaC,MAAK,SAAAC,GAC5EZ,QAAQC,IAAI,UAAY,EAAKI,MAAMC,WAAWF,GAAGK,GAAK,MAAQV,GAC9DC,QAAQC,IAAIW,OAJfR,EAAI,EAAGA,EAAI,EAAKC,MAAMC,WAAWO,OAAQT,IAAM,EAA/CA,IA1BT,EAAKC,MAAQ,CACTC,WAAY,IAJD,E,qDASnB,WAAqB,IAAD,OAChBnB,EAAI2B,KAAK,CACLC,WAAY,IACZC,SAAU,IACVC,KAAM,YACNC,WAAY,SAEfP,MAAK,SAACQ,GACH,EAAKjB,SAAS,CAACI,WAAYa,EAAKC,aAEnCC,OAAM,SAACC,GACJtB,QAAQC,IAAIqB,Q,oBAmBpB,WAAU,IAAD,OACL,OACA,sBAAKC,UAAU,aAAf,UACI,oBAAIA,UAAU,uCAAd,2CACA,sBAAKA,UAAU,mBAAf,UACI,wBAAQC,QAAS,kBAAM,EAAK1B,UAAU,IAC9ByB,UAAW,6JAAoL,IAArBE,KAAKpB,MAAMF,MAAc,cAAgB,IAD3N,eAKA,wBAAQqB,QAAS,kBAAM,EAAK1B,UAAU,IAC9ByB,UAAW,uIAA8J,IAArBE,KAAKpB,MAAMF,MAAc,cAAgB,IADrM,eAKA,wBAAQqB,QAAS,kBAAM,EAAK1B,UAAU,IAC9ByB,UAAW,uIAA8J,IAArBE,KAAKpB,MAAMF,MAAc,cAAgB,IADrM,eAKA,wBAAQqB,QAAS,kBAAM,EAAK1B,UAAU,IAC9ByB,UAAW,uIAA8J,IAArBE,KAAKpB,MAAMF,MAAc,cAAgB,IADrM,eAKA,wBAAQqB,QAAS,kBAAM,EAAK1B,UAAU,IAC9ByB,UAAW,uIAA8J,IAArBE,KAAKpB,MAAMF,MAAc,cAAgB,IADrM,eAKA,wBAAQqB,QAAS,kBAAM,EAAK1B,UAAU,IAC9ByB,UAAW,uIAA8J,IAArBE,KAAKpB,MAAMF,MAAc,cAAgB,IADrM,eAKA,wBAAQqB,QAAS,kBAAM,EAAK1B,UAAU,IAC9ByB,UAAW,uIAA8J,IAArBE,KAAKpB,MAAMF,MAAc,cAAgB,IADrM,eAKA,wBAAQqB,QAAS,kBAAM,EAAK1B,UAAU,IAC9ByB,UAAW,oJAA2K,IAArBE,KAAKpB,MAAMF,MAAc,cAAgB,IADlN,yB,GAhFQuB,aCPlBvC,EAAM,IAAIC,IAAS,CAACC,OAAQ,sBAC7BC,KAAK,qBACLC,MAAM,OA8BIoC,E,4MA3BXC,QAAU,WACNzC,EAAIqB,OAAO,EAAKX,MAAMY,GAAI,CAAC,gBAAiB,EAAKZ,MAAME,MAAMY,MAAK,SAAAC,GAC9DZ,QAAQC,IAAI,UAAY,EAAKJ,MAAMY,GAAK,QAAU,EAAKZ,MAAME,KAC7DC,QAAQC,IAAIW,O,EAMpBiB,SAAW,WACP7B,QAAQC,IAAI,uBACZ6B,OAAOC,KAAK,4DAA8D,EAAKlC,MAAMY,K,4CAGzF,WAAU,IAAD,OACL,OACA,8BACI,wBAAQe,QAAS,kBAAM,EAAKI,WACpBL,UAAW,8KAAgLE,KAAK5B,MAAMmC,SAAWP,KAAK5B,MAAME,IAAM,aAAe,IAAM,IAAM0B,KAAK5B,MAAMoC,MADhR,SAGSR,KAAK5B,MAAME,Y,GArBP2B,aCHnBvC,EAAM,IAAIC,IAAS,CAACC,OAAQ,sBAC7BC,KAAK,qBACLC,MAAM,OAGLC,GADQ,IAAIC,MACSC,cAAcC,UAAU,EAAG,IAEtDuC,OAAOC,UAAUC,OAAS,WACtB,IAAIC,EAAUC,SAASb,KAAM,IACzBc,EAAUC,KAAKC,MAAMJ,EAAU,MAC/BK,EAAUF,KAAKC,OAAOJ,EAAmB,KAARE,GAAiB,IAClDI,EAAUN,EAAmB,KAARE,EAA2B,GAAVG,EAK1C,OAHIH,EAAU,KAAKA,EAAU,IAAIA,GAC7BG,EAAU,KAAKA,EAAU,IAAIA,GAC7BC,EAAU,KAAKA,EAAU,IAAIA,GAC1BJ,EAAM,IAAIG,G,IAmGNE,E,4MA/FXC,OAAS,WACL,IAAIC,EAAUC,SAASC,eAAe,EAAKnD,MAAMY,IACjDT,QAAQC,IAAI,EAAKJ,MAAMoD,KAAO,IAAM,EAAKpD,MAAMqD,WAC/CJ,EAAQb,MAAMkB,QAAU,MAExBhE,EAAIiE,OAAO,CAAC,OAAU,CAClB,QAAS,EAAKvD,MAAMwD,QACpB,QAAW,UACX,YAAa7D,EACb,UAAW,KACXmB,MACA,SAAAC,GACIZ,QAAQC,IAAIW,GACZkC,EAAQb,MAAMqB,YAAc,SAC5BR,EAAQb,MAAMsB,YAAc,a,EAKxCC,OAAS,WACL,IAAIV,EAAUC,SAASC,eAAe,EAAKnD,MAAMY,IACjDqC,EAAQb,MAAMkB,QAAU,MAExBhE,EAAIqE,OAAO,EAAK3D,MAAMY,IAAIE,MAAK,SAAAC,GAC3BZ,QAAQC,IAAIW,GAEZkC,EAAQb,MAAMqB,YAAc,MAC5BR,EAAQb,MAAMsB,YAAc,a,EAQpC1B,SAAW,WACP7B,QAAQC,IAAI,uBACZ6B,OAAOC,KAAK,4DAA8D,EAAKlC,MAAMY,K,4CAGzF,WAAU,IAAD,OACL,OACA,8BACI,oBAAGgD,KAAQhC,KAAKgC,KAAMlC,UAAW,kHAAoHE,KAAK5B,MAAMqD,UAAY,EAAI,aAAe,IAAKzC,GAAIgB,KAAK5B,MAAMY,GAAnN,UACI,qBAAKc,UAAU,OAAf,SACI,qBAAKA,UAAU,uCAAf,SAAuDE,KAAK5B,MAAMoD,SAGtE,qBAAK1B,UAAU,YAAf,SACK,UAAWE,KAAK5B,OAAqC,qBAArB4B,KAAK5B,MAAM6D,MACpCjC,KAAK5B,MAAM6D,MACNC,MAAM,KACNC,KAAI,SAACC,GAAD,OACD,qBAAKtC,UAAU,6DAA6DU,MAAO,CAAC6B,SAAU,UAA9F,SAA0GD,OAG9G,KAIhB,gCACKpC,KAAK5B,MAAMkE,MADhB,IACwD,qBAAxBtC,KAAK5B,MAAMmE,SAA2BvC,KAAK5B,MAAMmE,SAAStD,WAAW0B,SAAW,MAGhH,sBAAKb,UAAU,wBAAf,UACI,wBAAQC,QAAS,kBAAM,EAAKgC,UAAUjC,UAAU,wJAAhD,oBAIA,wBAAQC,QAAS,kBAAM,EAAKqB,UAAUtB,UAAU,wJAAhD,oBAIA,wBAAQC,QAAS,kBAAM,EAAKK,YAAYN,UAAU,wJAAlD,yBAKJ,sBAAKA,UAAU,wBAAf,UACI,cAAC,EAAD,CAAYxB,IAAI,IAAIU,GAAIgB,KAAK5B,MAAMY,GAAIuB,OAAQP,KAAK5B,MAAMmC,OAAQC,MAAM,0BACxE,cAAC,EAAD,CAAYlC,IAAI,IAAIU,GAAIgB,KAAK5B,MAAMY,GAAIuB,OAAQP,KAAK5B,MAAMmC,SAC1D,cAAC,EAAD,CAAYjC,IAAI,IAAIU,GAAIgB,KAAK5B,MAAMY,GAAIuB,OAAQP,KAAK5B,MAAMmC,SAC1D,cAAC,EAAD,CAAYjC,IAAI,IAAIU,GAAIgB,KAAK5B,MAAMY,GAAIuB,OAAQP,KAAK5B,MAAMmC,SAC1D,cAAC,EAAD,CAAYjC,IAAI,IAAIU,GAAIgB,KAAK5B,MAAMY,GAAIuB,OAAQP,KAAK5B,MAAMmC,SAC1D,cAAC,EAAD,CAAYjC,IAAI,IAAIU,GAAIgB,KAAK5B,MAAMY,GAAIuB,OAAQP,KAAK5B,MAAMmC,SAC1D,cAAC,EAAD,CAAYjC,IAAI,IAAIU,GAAIgB,KAAK5B,MAAMY,GAAIuB,OAAQP,KAAK5B,MAAMmC,SAC1D,cAAC,EAAD,CAAYjC,IAAI,IAAIU,GAAIgB,KAAK5B,MAAMY,GAAIwB,MAAM,6B,GAvFtCP,aCnBvBuC,EAAY,IAAIxE,KACpBwE,EAAUC,QAAQD,EAAUE,UAAY,GACxC,IAAIC,EAAKlC,OAAO+B,EAAUE,WAAWE,SAAS,EAAG,KAC7CC,EAAKpC,OAAO+B,EAAUM,WAAa,GAAGF,SAAS,EAAG,KAEtDJ,EAAYG,EAAK,IAAME,EAEvB,IAAME,EAAW,IAAIpF,IAAS,CAACC,OAAQ,sBAClCC,KAAK,qBACLC,MAAM,OAEI,SAASkF,EAAgB5E,GAAQ,IAAD,EAEP6E,mBAAS,IAFF,mBAEpCpE,EAFoC,KAExBqE,EAFwB,KAuB3C,OAnBAC,qBAAU,WACNJ,EAAS1D,KAAK,CACVC,WAAY,IACZC,SAAU,IACVC,KAAM,YACNC,WAAY,SAEfP,MAAK,SAACQ,GACHwD,EAAcxD,EAAKC,YAEtBC,OAAM,SAACC,GACJtB,QAAQC,IAAIqB,QAEjB,IAEHtB,QAAQC,IAAIK,GAEZN,QAAQC,IAAI,WAAaJ,EAAMgF,OAG3B,sBAAKtD,UAAU,OAAf,UACI,oBAAIA,UAAU,qBAAd,qBACA,qBAAKA,UAAU,8EAAf,SAESjB,EAAWO,OAAS,EACjBP,EAECwE,MAAK,SAAUC,EAAGC,GACf,OAAOD,EAAExE,OAAO,qBAAuByE,EAAEzE,OAAO,wBAEnD0E,QAAO,SAAAC,GAAM,OAAIA,EAAO3E,OAAO,eAAiB0D,KAChDgB,QAAO,SAAAC,GAAM,MAA4C,qBAAjCA,EAAO3E,OAAO,kBACtC0E,QAAO,SAAAC,GAAM,OAAyD,IAArDA,EAAO3E,OAAO,eAAe4E,SAAS,cACvDvB,KAAI,SAACsB,GAAD,OACD,cAAC,EAAD,CACIjC,KAAMiC,EAAO3E,OAAO6E,YAEpB3E,GAAIyE,EAAOzE,GACXsD,MAAOmB,EAAO3E,OAAO,mBACrBmD,MAAOwB,EAAO3E,OAAP,aACP8E,UAAWH,EAAO3E,OAAO,sBAJpB2E,EAAOzE,OAQpB,iFC3DxB,IAAIwD,EAAY,IAAIxE,KACpBwE,EAAUC,QAAQD,EAAUE,UAAY,GAExC,IAAIC,EAAKlC,OAAO+B,EAAUE,WAAWE,SAAS,EAAG,KAC7CC,EAAKpC,OAAO+B,EAAUM,WAAa,GAAGF,SAAS,EAAG,KAEtDJ,EAAYG,EAAK,IAAME,EAEvB,IAAME,EAAW,IAAIpF,IAAS,CAACC,OAAQ,sBAClCC,KAAK,qBACLC,MAAM,OAEI,SAAS+F,EAAkBzF,GAAQ,IAAD,EAET6E,mBAAS,IAFA,mBAEtCpE,EAFsC,KAE1BqE,EAF0B,KAuB7C,OAnBAC,qBAAU,WACNJ,EAAS1D,KAAK,CACVC,WAAY,IACZC,SAAU,IACVC,KAAM,YACNC,WAAY,SAEfP,MAAK,SAACQ,GACHwD,EAAcxD,EAAKC,YAEtBC,OAAM,SAACC,GACJtB,QAAQC,IAAIqB,QAEjB,IAEHtB,QAAQC,IAAIK,GAEZN,QAAQC,IAAI,WAAaJ,EAAMgF,OAG3B,sBAAKtD,UAAU,OAAf,UACI,oBAAIA,UAAU,qBAAd,uBACA,qBAAKA,UAAU,8EAAf,SAESjB,EAAWO,OAAS,EACjBP,EAECwE,MAAK,SAAUC,EAAGC,GACf,OAAOD,EAAExE,OAAO,qBAAuByE,EAAEzE,OAAO,wBAEnD0E,QAAO,SAAAC,GAAM,OAAIA,EAAO3E,OAAO,eAAiB0D,KAChDgB,QAAO,SAAAC,GAAM,MAA4C,qBAAjCA,EAAO3E,OAAO,kBACtC0E,QAAO,SAAAC,GAAM,OAA2D,IAAvDA,EAAO3E,OAAO,eAAe4E,SAAS,gBACvDvB,KAAI,SAACsB,GAAD,OACD,cAAC,EAAD,CACIjC,KAAMiC,EAAO3E,OAAO6E,YAEpB3E,GAAIyE,EAAOzE,GACXsD,MAAOmB,EAAO3E,OAAO,mBACrBmD,MAAOwB,EAAO3E,OAAP,aACP8E,UAAWH,EAAO3E,OAAO,sBAJpB2E,EAAOzE,OAQpB,iFC5DxB,IAAIwD,EAAY,IAAIxE,KACpBwE,EAAUC,QAAQD,EAAUE,UAAY,GACxC,IAAIC,EAAKlC,OAAO+B,EAAUE,WAAWE,SAAS,EAAG,KAC7CC,EAAKpC,OAAO+B,EAAUM,WAAa,GAAGF,SAAS,EAAG,KAEtDJ,EAAYG,EAAK,IAAME,EAEvB,IAAME,EAAW,IAAIpF,IAAS,CAACC,OAAQ,sBAClCC,KAAK,qBACLC,MAAM,OAEI,SAASgG,EAAgB1F,GAAQ,IAAD,EAEP6E,mBAAS,IAFF,mBAEpCpE,EAFoC,KAExBqE,EAFwB,KAuB3C,OAnBAC,qBAAU,WACNJ,EAAS1D,KAAK,CACVC,WAAY,IACZC,SAAU,IACVC,KAAM,YACNC,WAAY,SAEfP,MAAK,SAACQ,GACHwD,EAAcxD,EAAKC,YAEtBC,OAAM,SAACC,GACJtB,QAAQC,IAAIqB,QAEjB,IAEHtB,QAAQC,IAAIK,GAEZN,QAAQC,IAAI,WAAaJ,EAAMgF,OAG3B,sBAAKtD,UAAU,OAAf,UACI,oBAAIA,UAAU,qBAAd,qBACA,qBAAKA,UAAU,8EAAf,SAESjB,EAAWO,OAAS,EACjBP,EAECwE,MAAK,SAAUC,EAAGC,GACf,OAAOD,EAAExE,OAAO,qBAAuByE,EAAEzE,OAAO,wBAEnD0E,QAAO,SAAAC,GAAM,OAAIA,EAAO3E,OAAO,eAAiB0D,KAChDgB,QAAO,SAAAC,GAAM,MAA4C,qBAAjCA,EAAO3E,OAAO,kBACtC0E,QAAO,SAAAC,GAAM,OAAyD,IAArDA,EAAO3E,OAAO,eAAe4E,SAAS,cACvDvB,KAAI,SAACsB,GAAD,OACD,cAAC,EAAD,CACIjC,KAAMiC,EAAO3E,OAAO6E,YAEpB3E,GAAIyE,EAAOzE,GACXsD,MAAOmB,EAAO3E,OAAO,mBACrBmD,MAAOwB,EAAO3E,OAAP,aACP8E,UAAWH,EAAO3E,OAAO,sBAJpB2E,EAAOzE,OAQpB,iFC3DxB,IAAIwD,EAAY,IAAIxE,KACpBwE,EAAUC,QAAQD,EAAUE,UAAY,GACxC,IAAIC,EAAKlC,OAAO+B,EAAUE,WAAWE,SAAS,EAAG,KAC7CC,EAAKpC,OAAO+B,EAAUM,WAAa,GAAGF,SAAS,EAAG,KAEtDJ,EAAYG,EAAK,IAAME,EAEvB,IAAME,EAAW,IAAIpF,IAAS,CAACC,OAAQ,sBAClCC,KAAK,qBACLC,MAAM,OAEI,SAASiG,EAAa3F,GAAQ,IAAD,EAEJ6E,mBAAS,IAFL,mBAEjCpE,EAFiC,KAErBqE,EAFqB,KAuBxC,OAnBAC,qBAAU,WACNJ,EAAS1D,KAAK,CACVC,WAAY,IACZC,SAAU,IACVC,KAAM,YACNC,WAAY,SAEfP,MAAK,SAACQ,GACHwD,EAAcxD,EAAKC,YAEtBC,OAAM,SAACC,GACJtB,QAAQC,IAAIqB,QAEjB,IAEHtB,QAAQC,IAAIK,GAEZN,QAAQC,IAAI,WAAaJ,EAAMgF,OAG3B,8BACI,qBAAKtD,UAAU,8EAAf,SAESjB,EAAWO,OAAS,EACjBP,EAECwE,MAAK,SAAUC,EAAGC,GACf,OAAOD,EAAExE,OAAO,qBAAuByE,EAAEzE,OAAO,wBAEnD0E,QAAO,SAAAC,GAAM,OAAIA,EAAO3E,OAAO,eAAiB0D,KAChDgB,QAAO,SAAAC,GAAM,MAA4C,qBAAjCA,EAAO3E,OAAO,kBACtCqD,KAAI,SAACsB,GAAD,OACD,cAAC,EAAD,CACIjC,KAAMiC,EAAO3E,OAAO6E,YAEpB3E,GAAIyE,EAAOzE,GACXsD,MAAOmB,EAAO3E,OAAO,mBACrBmD,MAAOwB,EAAO3E,OAAP,aACP8E,UAAWH,EAAO3E,OAAO,sBAJpB2E,EAAOzE,OAQpB,gFCzBTgF,MA7Bf,SAAa5F,GAAQ,IAAD,EACG6E,mBAAS,IADZ,mBACXgB,EADW,KACNC,EADM,KAMlB,OAJA3F,QAAQC,IAAIyF,GAKV,qBAAKnE,UAAU,yBAAf,SACE,sBAAKA,UAAU,WAAf,UACE,cAAC,EAAD,IAEA,cAACiE,EAAD,CACEG,MAAOA,IAET,cAAClB,EAAD,CACEkB,MAAOA,IAET,cAACL,EAAD,CACEK,MAAOA,IAET,cAACJ,EAAD,CACEI,MAAOA,UCpBjBC,IAASC,OACP,cAAC,EAAD,CAAKC,MAHM,KAIX/C,SAASC,eAAe,W","file":"static/js/main.961c8e84.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport Airtable from 'airtable-node'\n\nconst Log = new Airtable({apiKey: 'keywMvCl7aRV4a5af'})\n    .base('appMcSmdPtPWcBhIX')\n    .table('Log')\n\nconst today = new Date();\nconst today_string = today.toISOString().substring(0, 10);\n\nclass RateToday extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activities: []\n        }\n    }\n    /* Get today's activities */\n\n    componentDidMount() {\n        Log.list({\n            maxRecords: 999,\n            pageSize: 100,\n            view: \"L: Review\",\n            cellFormat: 'json'\n        })\n        .then((data) => {\n            this.setState({activities: data.records});\n        })\n        .catch((error) => {\n            console.log(error);\n        })\n    }\n    \n    rateToday = (val) => {\n        console.log(\"Rating today\")\n\n        this.setState({value: val})\n\n        for (let i = 0; i < this.state.activities.length; i++) {\n            if (this.state.activities[i].fields.[\"exec-date\"] !== today_string) {\n                Log.update(this.state.activities[i].id, {\"T Well Spent?\": val.toString()}).then(resp => {\n                    console.log(\"Rating \" + this.state.activities[i].id + \" a \" + val)\n                    console.log(resp)\n                })\n            }\n        }\n    }\n    \n    render() {\n        return (\n        <div className=\"w-full p-2\">\n            <h1 className=\"font-medium text-black text-2xl mb-1\">Did you spend yesterday well?</h1>\n            <div className=\"grid grid-cols-8\">\n                <button onClick={() => this.rateToday(1)}\n                        className={\"rounded-l-lg border-l w-full px-1 py-2 hover:bg-gray-50 text-center focus:outline-none active:shadow-sm text-sm border-r border-t border-b text-gray-400 \" + (this.state.value === 1 ? \"bg-gray-100\" : \"\")}\n                >\n                        1\n                </button>\n                <button onClick={() => this.rateToday(2)}\n                        className={\"w-full px-1 py-2 hover:bg-gray-50 text-center focus:outline-none active:shadow-sm text-sm border-r border-t border-b text-gray-400 \" + (this.state.value === 2 ? \"bg-gray-100\" : \"\")}\n                >\n                        2\n                </button>\n                <button onClick={() => this.rateToday(3)}\n                        className={\"w-full px-1 py-2 hover:bg-gray-50 text-center focus:outline-none active:shadow-sm text-sm border-r border-t border-b text-gray-400 \" + (this.state.value === 3 ? \"bg-gray-100\" : \"\")}\n                >\n                        3\n                </button>\n                <button onClick={() => this.rateToday(4)}\n                        className={\"w-full px-1 py-2 hover:bg-gray-50 text-center focus:outline-none active:shadow-sm text-sm border-r border-t border-b text-gray-400 \" + (this.state.value === 4 ? \"bg-gray-100\" : \"\")}\n                >\n                        4\n                </button>\n                <button onClick={() => this.rateToday(5)}\n                        className={\"w-full px-1 py-2 hover:bg-gray-50 text-center focus:outline-none active:shadow-sm text-sm border-r border-t border-b text-gray-400 \" + (this.state.value === 5 ? \"bg-gray-100\" : \"\")}\n                >\n                        5\n                </button>\n                <button onClick={() => this.rateToday(6)}\n                        className={\"w-full px-1 py-2 hover:bg-gray-50 text-center focus:outline-none active:shadow-sm text-sm border-r border-t border-b text-gray-400 \" + (this.state.value === 6 ? \"bg-gray-100\" : \"\")}\n                >\n                        6\n                </button>\n                <button onClick={() => this.rateToday(7)}\n                        className={\"w-full px-1 py-2 hover:bg-gray-50 text-center focus:outline-none active:shadow-sm text-sm border-r border-t border-b text-gray-400 \" + (this.state.value === 7 ? \"bg-gray-100\" : \"\")}\n                >\n                        7\n                </button>\n                <button onClick={() => this.rateToday(8)}\n                        className={\"rounded-r-lg w-full px-1 py-2 hover:bg-gray-50 text-center focus:outline-none active:shadow-sm text-sm border-r border-t border-b text-gray-400 \" + (this.state.value === 8 ? \"bg-gray-100\" : \"\")}\n                >\n                        8\n                </button>\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default RateToday","import React , {Component} from \"react\";\nimport Airtable from 'airtable-node'\n\nconst Log = new Airtable({apiKey: 'keywMvCl7aRV4a5af'})\n    .base('appMcSmdPtPWcBhIX')\n    .table('Log')\n\nclass RateButton extends Component {\n    promote = () => {\n        Log.update(this.props.id, {\"T Well Spent?\": this.props.val}).then(resp => {\n            console.log(\"Rating \" + this.props.id + \"with \" + this.props.val)\n            console.log(resp)\n        })\n    }\n\n    /* let atHref = \"https://airtable.com/tblo6SQZQakNq4URH/viwd4XwZ1wC8esYgg\" + this.props.id; */\n\n    openInAt = () => {\n        console.log(\"Opening in Airtable\")\n        window.open(\"https://airtable.com/tblo6SQZQakNq4URH/viwd4XwZ1wC8esYgg/\" + this.props.id)\n    }\n    \n    render() {\n        return (\n        <div>\n            <button onClick={() => this.promote()}\n                    className={\"w-full px-1 py-1 border-gray-50 active:border-gray-500 hover:bg-gray-100 text-center focus:outline-none active:shadow-sm text-xs border-r border-t border-b text-gray-200 \" + (this.props.rating === this.props.val ? \"bg-gray-50\" : \"\") + \" \" + this.props.style}\n                >\n                    {this.props.val}\n            </button>\n        </div>\n        );\n    }\n}\n\nexport default RateButton","import React , {Component} from \"react\";\nimport Airtable from 'airtable-node'\nimport RateButton from './RateButton'\n\nconst Log = new Airtable({apiKey: 'keywMvCl7aRV4a5af'})\n    .base('appMcSmdPtPWcBhIX')\n    .table('Log')\n\nconst today = new Date();\nconst today_string = today.toISOString().substring(0, 10);\n\nString.prototype.toHHMM = function () {\n    var sec_num = parseInt(this, 10); // don't forget the second param\n    var hours   = Math.floor(sec_num / 3600);\n    var minutes = Math.floor((sec_num - (hours * 3600)) / 60);\n    var seconds = sec_num - (hours * 3600) - (minutes * 60);\n\n    if (hours   < 10) {hours   = \"0\"+hours;}\n    if (minutes < 10) {minutes = \"0\"+minutes;}\n    if (seconds < 10) {seconds = \"0\"+seconds;}\n    return hours+':'+minutes;\n}\n\nclass ActivityCard extends Component {\n    replan = () => {\n        var element = document.getElementById(this.props.id);\n        console.log(this.props.name + \" \" + this.props.promotion)\n        element.style.opacity = \"0.2\";\n        \n        Log.create({\"fields\": {\n            \"What?\": this.props.what_id,\n            \"Context\": \"Leisure\",\n            \"exec-date\": today_string,\n            \"Group #\": 5\n        }}).then(\n            resp => {\n                console.log(resp)\n                element.style.borderColor = \"yellow\";\n                element.style.borderWidth = \"medium\";\n            }\n        )\n    }\n\n    delete = () => {\n        var element = document.getElementById(this.props.id);\n        element.style.opacity = \"0.2\";\n\n        Log.delete(this.props.id).then(resp => {\n            console.log(resp)\n            \n            element.style.borderColor = \"red\";\n            element.style.borderWidth = \"medium\";\n        }\n\n        )\n    }\n\n    /* let atHref = \"https://airtable.com/tblJy7BTWYrsbf5M5/viwO8FxxQGtiJGwTh\" + this.props.id; */\n\n    openInAt = () => {\n        console.log(\"Opening in Airtable\")\n        window.open(\"https://airtable.com/tblJy7BTWYrsbf5M5/viwO8FxxQGtiJGwTh/\" + this.props.id)\n    }\n    \n    render() {\n        return (\n        <div>\n            <a href = {this.href} className={\"shadow-sm active:border-gray-500 group block rounded-lg p-2 sm:p-4 hover:border-gray-300 m-0 text-left border \" + (this.props.promotion > 0 ? \"opacity-25\" : \"\")} id={this.props.id}>\n                <div className=\"grid\">\n                    <div className=\"font-medium text-black text-2xl mb-1\">{this.props.name}</div>\n                </div>\n\n                <div className=\"space-y-0\">\n                    {'goals' in this.props && typeof this.props.goals !== \"undefined\" ? (\n                            this.props.goals\n                                .split(\",\")\n                                .map((goal) => (\n                                    <div className=\"inline-block rounded py-1 px-1 bg-gray-300 text-white mr-1\" style={{fontSize: \"0.6rem\"}}>{goal}</div>\n                                ))\n                            ) : (\n                                \"\"\n                    )}\n                </div>\n\n                <div>\n                    {this.props.notes} {(typeof this.props.duration !== \"undefined\" ? this.props.duration.toString().toHHMM() : \"\")} \n                </div>\n\n                <div className=\"grid grid-cols-3 mt-2\">\n                    <button onClick={() => this.delete()} className=\"w-full rounded-lg py-2 active:border-gray-500 hover:border-gray-300 text-center focus:outline-none active:shadow-sm text-gray-400 text-sm border mr-1\">\n                        Delete\n                    </button>\n\n                    <button onClick={() => this.replan()} className=\"w-full rounded-lg py-2 active:border-gray-500 hover:border-gray-300 text-center focus:outline-none active:shadow-sm text-gray-400 text-sm border mr-1\">\n                        Replan\n                    </button>\n\n                    <button onClick={() => this.openInAt()} className=\"w-full rounded-lg py-2 active:border-gray-500 hover:border-gray-300 text-center focus:outline-none active:shadow-sm text-gray-400 text-sm border mr-1\">\n                        Airtable\n                    </button>\n                </div>\n\n                <div className=\"grid grid-cols-8 mt-2\">\n                    <RateButton val=\"1\" id={this.props.id} rating={this.props.rating} style=\"rounded-l-lg border-l\"/>\n                    <RateButton val=\"2\" id={this.props.id} rating={this.props.rating} />\n                    <RateButton val=\"3\" id={this.props.id} rating={this.props.rating} />\n                    <RateButton val=\"4\" id={this.props.id} rating={this.props.rating} />\n                    <RateButton val=\"5\" id={this.props.id} rating={this.props.rating} />\n                    <RateButton val=\"6\" id={this.props.id} rating={this.props.rating} />\n                    <RateButton val=\"7\" id={this.props.id} rating={this.props.rating} />\n                    <RateButton val=\"8\" id={this.props.id} style=\"rounded-r-lg\"/>\n                </div>\n            </a>\n                \n        </div>\n        );\n    }\n}\n\nexport default ActivityCard","import React, { useState, useEffect } from 'react'\nimport ActivityCard from \"./ActivityCard\";\nimport Airtable from 'airtable-node'\n\nvar yesterday = new Date();\nyesterday.setDate(yesterday.getDate() - 1);\nvar dd = String(yesterday.getDate()).padStart(2, '0');\nvar mm = String(yesterday.getMonth() + 1).padStart(2, '0'); //January is 0!\n\nyesterday = dd + '/' + mm;\n\nconst airtable = new Airtable({apiKey: 'keywMvCl7aRV4a5af'})\n    .base('appMcSmdPtPWcBhIX')\n    .table('Log')\n\nexport default function TaskListMorning(props) {\n\n    const [activities, setActivities] = useState({});\n\n    useEffect(() => {\n        airtable.list({\n            maxRecords: 999,\n            pageSize: 100,\n            view: \"L: Review\",\n            cellFormat: 'json'\n        })\n        .then((data) => {\n            setActivities(data.records);\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }, []);\n\n    console.log(activities)\n\n    console.log(\"Testing \" + props.cycle)\n\n    return (\n        <div className=\"mt-2\">\n            <h1 className=\"text-3xl font-bold\">Morning</h1>\n            <div className=\"justify-center max-w-full w-full grid grid-cols-2 grid-flow-row-dense gap-2\">\n                \n                    {activities.length > 0 ? (\n                        activities\n                        /* .filter(record => record.fields[\"Concluded formula\"] === 0) */\n                        .sort(function (a, b) {\n                            return a.fields[\"Concluded formula\"] - b.fields[\"Concluded formula\"];\n                        })\n                        .filter(record => record.fields[\"exec-date\"] === yesterday)\n                        .filter(record => typeof record.fields[\"time-of-day\"] !== \"undefined\")\n                        .filter(record => record.fields[\"time-of-day\"].includes(\"Morning\") === true)\n                        .map((record) => (\n                            <ActivityCard\n                                name={record.fields.what_string}\n                                key={record.id}\n                                id={record.id}\n                                notes={record.fields[\"Learning points\"]}\n                                goals={record.fields[\"goals_string\"]}\n                                concluded={record.fields[\"Concluded formula\"]}\n                            />\n                        ))\n                    ) : (\n                        <p>Fetching propositions if any uncompleted...</p>\n                    )}\n            </div>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react'\nimport ActivityCard from \"./ActivityCard\";\nimport Airtable from 'airtable-node'\n\nlet yesterday = new Date();\nyesterday.setDate(yesterday.getDate() - 1);\n\nvar dd = String(yesterday.getDate()).padStart(2, '0');\nvar mm = String(yesterday.getMonth() + 1).padStart(2, '0'); //January is 0!\n\nyesterday = dd + '/' + mm;\n\nconst airtable = new Airtable({apiKey: 'keywMvCl7aRV4a5af'})\n    .base('appMcSmdPtPWcBhIX')\n    .table('Log')\n\nexport default function TaskListAfternoon(props) {\n\n    const [activities, setActivities] = useState({});\n\n    useEffect(() => {\n        airtable.list({\n            maxRecords: 999,\n            pageSize: 100,\n            view: \"L: Review\",\n            cellFormat: 'json'\n        })\n        .then((data) => {\n            setActivities(data.records);\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }, []);\n\n    console.log(activities)\n\n    console.log(\"Testing \" + props.cycle)\n\n    return (\n        <div className=\"mt-2\">\n            <h1 className=\"text-3xl font-bold\">Afternoon</h1>\n            <div className=\"justify-center max-w-full w-full grid grid-cols-2 grid-flow-row-dense gap-2\">\n                \n                    {activities.length > 0 ? (\n                        activities\n                        /* .filter(record => record.fields[\"Concluded formula\"] === 0) */\n                        .sort(function (a, b) {\n                            return a.fields[\"Concluded formula\"] - b.fields[\"Concluded formula\"];\n                        })\n                        .filter(record => record.fields[\"exec-date\"] === yesterday)\n                        .filter(record => typeof record.fields[\"time-of-day\"] !== \"undefined\")\n                        .filter(record => record.fields[\"time-of-day\"].includes(\"Afternoon\") === true)\n                        .map((record) => (\n                            <ActivityCard\n                                name={record.fields.what_string}\n                                key={record.id}\n                                id={record.id}\n                                notes={record.fields[\"Learning points\"]}\n                                goals={record.fields[\"goals_string\"]}\n                                concluded={record.fields[\"Concluded formula\"]}\n                            />\n                        ))\n                    ) : (\n                        <p>Fetching propositions if any uncompleted...</p>\n                    )}\n            </div>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react'\nimport ActivityCard from \"./ActivityCard\";\nimport Airtable from 'airtable-node'\n\nvar yesterday = new Date();\nyesterday.setDate(yesterday.getDate() - 1);\nvar dd = String(yesterday.getDate()).padStart(2, '0');\nvar mm = String(yesterday.getMonth() + 1).padStart(2, '0'); //January is 0!\n\nyesterday = dd + '/' + mm;\n\nconst airtable = new Airtable({apiKey: 'keywMvCl7aRV4a5af'})\n    .base('appMcSmdPtPWcBhIX')\n    .table('Log')\n\nexport default function TaskListEvening(props) {\n\n    const [activities, setActivities] = useState({});\n\n    useEffect(() => {\n        airtable.list({\n            maxRecords: 999,\n            pageSize: 100,\n            view: \"L: Review\",\n            cellFormat: 'json'\n        })\n        .then((data) => {\n            setActivities(data.records);\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }, []);\n\n    console.log(activities)\n\n    console.log(\"Testing \" + props.cycle)\n\n    return (\n        <div className=\"mt-2\">\n            <h1 className=\"text-3xl font-bold\">Evening</h1>\n            <div className=\"justify-center max-w-full w-full grid grid-cols-2 grid-flow-row-dense gap-2\">\n                \n                    {activities.length > 0 ? (\n                        activities\n                        /* .filter(record => record.fields[\"Concluded formula\"] === 0) */\n                        .sort(function (a, b) {\n                            return a.fields[\"Concluded formula\"] - b.fields[\"Concluded formula\"];\n                        })\n                        .filter(record => record.fields[\"exec-date\"] === yesterday)\n                        .filter(record => typeof record.fields[\"time-of-day\"] !== \"undefined\")\n                        .filter(record => record.fields[\"time-of-day\"].includes(\"Evening\") === true)\n                        .map((record) => (\n                            <ActivityCard\n                                name={record.fields.what_string}\n                                key={record.id}\n                                id={record.id}\n                                notes={record.fields[\"Learning points\"]}\n                                goals={record.fields[\"goals_string\"]}\n                                concluded={record.fields[\"Concluded formula\"]}\n                            />\n                        ))\n                    ) : (\n                        <p>Fetching propositions if any uncompleted...</p>\n                    )}\n            </div>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react'\nimport ActivityCard from \"./ActivityCard\";\nimport Airtable from 'airtable-node'\n\nvar yesterday = new Date();\nyesterday.setDate(yesterday.getDate() - 1);\nvar dd = String(yesterday.getDate()).padStart(2, '0');\nvar mm = String(yesterday.getMonth() + 1).padStart(2, '0'); //January is 0!\n\nyesterday = dd + '/' + mm;\n\nconst airtable = new Airtable({apiKey: 'keywMvCl7aRV4a5af'})\n    .base('appMcSmdPtPWcBhIX')\n    .table('Log')\n\nexport default function TaskListNone(props) {\n\n    const [activities, setActivities] = useState({});\n\n    useEffect(() => {\n        airtable.list({\n            maxRecords: 999,\n            pageSize: 100,\n            view: \"L: Review\",\n            cellFormat: 'json'\n        })\n        .then((data) => {\n            setActivities(data.records);\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }, []);\n\n    console.log(activities)\n\n    console.log(\"Testing \" + props.cycle)\n\n    return (\n        <div>\n            <div className=\"justify-center max-w-full w-full grid grid-cols-2 grid-flow-row-dense gap-2\">\n                \n                    {activities.length > 0 ? (\n                        activities\n                        /* .filter(record => record.fields[\"Concluded formula\"] === 0) */\n                        .sort(function (a, b) {\n                            return a.fields[\"Concluded formula\"] - b.fields[\"Concluded formula\"];\n                        })\n                        .filter(record => record.fields[\"exec-date\"] === yesterday)\n                        .filter(record => typeof record.fields[\"time-of-day\"] === \"undefined\")\n                        .map((record) => (\n                            <ActivityCard\n                                name={record.fields.what_string}\n                                key={record.id}\n                                id={record.id}\n                                notes={record.fields[\"Learning points\"]}\n                                goals={record.fields[\"goals_string\"]}\n                                concluded={record.fields[\"Concluded formula\"]}\n                            />\n                        ))\n                    ) : (\n                        <p>Fetching propositions if any uncompleted...</p>\n                    )}\n            </div>\n        </div>\n    );\n}\n","import React, { useState } from 'react'\nimport RateToday from './components/RateToday';\nimport TaskListMorning from './components/TaskListMorning'\nimport TaskListAfternoon from './components/TaskListAfternoon'\nimport TaskListEvening from './components/TaskListEvening'\nimport TaskListNone from './components/TaskListNone';\n\nfunction App(props) {\n  const [run, reRun] = useState({});\n  console.log(run)\n\n  var show = 0\n\n  return (\n    <div className=\"grid mx-auto max-w-5xl\">\n      <div className=\"grid m-2\">\n        <RateToday />\n\n        <TaskListNone\n          reRun={reRun}\n        />\n        <TaskListMorning \n          reRun={reRun}\n        />\n        <TaskListAfternoon\n          reRun={reRun}\n        />\n        <TaskListEvening\n          reRun={reRun}\n        />\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n//create a new Airtable object in React \nconst DATA = []\n\nReactDOM.render(\n  <App tasks={DATA} />,\n  document.getElementById('root')\n);"],"sourceRoot":""}